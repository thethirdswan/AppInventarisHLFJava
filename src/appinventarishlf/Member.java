/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package appinventarishlf;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aryas
 */
public class Member extends javax.swing.JFrame {

    /**
     * Creates new form Member
     */
    public Member() {
        initComponents();
        showdata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelmember = new javax.swing.JTable();
        judul = new javax.swing.JLabel();
        mem = new javax.swing.JLabel();
        txtmem = new javax.swing.JTextField();
        asal = new javax.swing.JLabel();
        txtasal = new javax.swing.JTextField();
        no = new javax.swing.JLabel();
        txtno = new javax.swing.JTextField();
        tipemem = new javax.swing.JLabel();
        boxtipemem = new javax.swing.JComboBox<>();
        btntambahmem = new javax.swing.JButton();
        btneditmem = new javax.swing.JButton();
        btnhapusmem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Daftar Member");
        setMaximumSize(new java.awt.Dimension(850, 300));
        setMinimumSize(new java.awt.Dimension(850, 300));
        setPreferredSize(new java.awt.Dimension(850, 300));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelmember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Member", "Nama Member", "Asal Member", "No. Telpon", "Tipe Member"
            }
        ));
        tabelmember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelmemberMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabelmember);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 470, 260));

        judul.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        judul.setText("Member Pegasus");
        getContentPane().add(judul, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        mem.setText("Nama Member");
        getContentPane().add(mem, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));
        getContentPane().add(txtmem, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 140, -1));

        asal.setText("Asal Member");
        getContentPane().add(asal, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));
        getContentPane().add(txtasal, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 140, -1));

        no.setText("Nomor Telepon");
        getContentPane().add(no, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));
        getContentPane().add(txtno, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 140, -1));

        tipemem.setText("Tipe Member");
        getContentPane().add(tipemem, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        boxtipemem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "harian", "mingguan", "bulanan" }));
        getContentPane().add(boxtipemem, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 140, -1));

        btntambahmem.setText("Tambahkan");
        btntambahmem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahmemActionPerformed(evt);
            }
        });
        getContentPane().add(btntambahmem, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 120, -1));

        btneditmem.setText("Edit Member");
        btneditmem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditmemActionPerformed(evt);
            }
        });
        getContentPane().add(btneditmem, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 120, -1));

        btnhapusmem.setText("Hapus Member");
        btnhapusmem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusmemActionPerformed(evt);
            }
        });
        getContentPane().add(btnhapusmem, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 120, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btneditmemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditmemActionPerformed
        DefaultTableModel model = (DefaultTableModel) tabelmember.getModel();
        if (txtmem.getText().isEmpty() || txtasal.getText().isEmpty() || txtno.getText().isEmpty() || boxtipemem.getSelectedItem() == "-") {
            JOptionPane.showMessageDialog(null, "Masih ada input yang belum terisi!", "Perhatian", JOptionPane.WARNING_MESSAGE);
        } else {
            String strmem,strasal,strno,kode;
            try {
                Connection con = new koneksi().GetConnection();
                int row = tabelmember.getSelectedRow();
                kode = model.getValueAt(row, 0).toString();
                strmem= txtmem.getText();
                strasal = txtasal.getText();
                strno = txtno.getText();
                String sql = "UPDATE member SET namamember = '"+strmem+"', asal = '"+strasal+"', no_telp = '"+strno+"', tipemember = '"+boxtipemem.getSelectedItem()+"' WHERE kodemember = '"+kode+"'";
                Statement st = con.createStatement();
                st.executeUpdate(sql);
                txtmem.setText("");
                txtasal.setText("");
                txtno.setText("");
                boxtipemem.setSelectedItem("-");
                showdata();
                JOptionPane.showMessageDialog(null, "Data sudah diedit~", "Info", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data tidak diinput! \n" + e, "Perhatian", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btneditmemActionPerformed

    private void btntambahmemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahmemActionPerformed
//        DefaultTableModel model = (DefaultTableModel) tabelmember.getModel();
        if (txtmem.getText().isEmpty() || txtasal.getText().isEmpty() || txtno.getText().isEmpty() || boxtipemem.getSelectedItem() == "-") {
            JOptionPane.showMessageDialog(null, "Masih ada input yang belum terisi!", "Perhatian", JOptionPane.WARNING_MESSAGE);
        } else {
            String strmem="",strasal="",strno="";
            try {
                Connection con = new koneksi().GetConnection();
                strmem= txtmem.getText();
                strasal = txtasal.getText();
                strno = txtno.getText();
                String sql = "INSERT INTO member (namamember, asal, no_telp, tipemember) VALUES ('"+strmem+"', '"+strasal+"', '"+strno+"', '"+boxtipemem.getSelectedItem()+"')";
                Statement st = con.createStatement();
                st.executeUpdate(sql);
                txtmem.setText("");
                txtasal.setText("");
                txtno.setText("");
                boxtipemem.setSelectedItem("-");
                showdata();
                JOptionPane.showMessageDialog(null, "Data sudah dimasukkan~", "Info", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data tidak diinput! \n" + e, "Perhatian", JOptionPane.WARNING_MESSAGE);
            } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data untuk dihapus!", "Error", JOptionPane.WARNING_MESSAGE);
        }
        }
    }//GEN-LAST:event_btntambahmemActionPerformed

    private void tabelmemberMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelmemberMouseReleased
        DefaultTableModel model = (DefaultTableModel) tabelmember.getModel();
        int row = tabelmember.getSelectedRow();
        String nama = model.getValueAt(row, 1).toString();
        String asal = model.getValueAt(row, 2).toString();
        String no = model.getValueAt(row, 3).toString();
        String tipe = model.getValueAt(row, 4).toString();
        txtmem.setText(nama);
        txtasal.setText(asal);
        txtno.setText(no);
        boxtipemem.setSelectedItem(tipe);
    }//GEN-LAST:event_tabelmemberMouseReleased

    private void btnhapusmemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusmemActionPerformed
       try {
            DefaultTableModel model = (DefaultTableModel) tabelmember.getModel();
            int row = tabelmember.getSelectedRow();
            String kode = model.getValueAt(row, 0).toString();
            Connection con = new koneksi().GetConnection();
            String sql = "DELETE FROM member WHERE kodemember = '"+kode+"'";
            Statement st = con.createStatement();
            model.removeRow(row);
            st.executeUpdate(sql);
            txtmem.setText("");
            txtasal.setText("");
            txtno.setText("");
            boxtipemem.setSelectedItem("-");
            JOptionPane.showMessageDialog(null, "Data sudah dihapus~", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi sebuah kesalahan! \n " + e, "Error", JOptionPane.WARNING_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data untuk dihapus!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnhapusmemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Member().setVisible(true);
            }
        });
    }
    
    public void showdata() {
        Connection con = new koneksi().GetConnection();
        ResultSet rs = null;
        PreparedStatement ps = null;
        DefaultTableModel model = (DefaultTableModel) tabelmember.getModel();
        model.setRowCount(0);
        try {
            String sql = "SELECT * FROM member";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                String strkode = rs.getString("kodemember");
                String strnama = rs.getString("namamember");
                String strasal = rs.getString("asal");
                String nohp = rs.getString("no_telp");
                String tipemember = rs.getString("tipemember");
                Object[] row = {strkode, strnama, strasal, nohp, tipemember};
                model.addRow(row);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan! \n" + e, "Perhatian", JOptionPane.WARNING_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel asal;
    private javax.swing.JComboBox<String> boxtipemem;
    private javax.swing.JButton btneditmem;
    private javax.swing.JButton btnhapusmem;
    private javax.swing.JButton btntambahmem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel judul;
    private javax.swing.JLabel mem;
    private javax.swing.JLabel no;
    private javax.swing.JTable tabelmember;
    private javax.swing.JLabel tipemem;
    private javax.swing.JTextField txtasal;
    private javax.swing.JTextField txtmem;
    private javax.swing.JTextField txtno;
    // End of variables declaration//GEN-END:variables
}
