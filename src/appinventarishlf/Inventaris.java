/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package appinventarishlf;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aryas
 */
public class Inventaris extends javax.swing.JFrame {

    /**
     * Creates new form inventaris
     */
    public Inventaris() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        jPopupMenu5 = new javax.swing.JPopupMenu();
        jFrame1 = new javax.swing.JFrame();
        jPopupMenu6 = new javax.swing.JPopupMenu();
        jFrame2 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelinventaris = new javax.swing.JTable();
        bthapus = new javax.swing.JButton();
        input = new javax.swing.JButton();
        kode = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        stok = new javax.swing.JTextField();
        labelstok = new javax.swing.JLabel();
        labelnama = new javax.swing.JLabel();
        labelkode = new javax.swing.JLabel();
        judul = new javax.swing.JLabel();
        btedit = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventaris NC");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(400, 500));
        setMinimumSize(new java.awt.Dimension(400, 500));
        setPreferredSize(new java.awt.Dimension(400, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelinventaris.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Barang", "Nama Barang", "Stok"
            }
        ));
        tabelinventaris.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelinventarisMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabelinventaris);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 380, 280));

        bthapus.setText("Hapus Data");
        bthapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthapusActionPerformed(evt);
            }
        });
        getContentPane().add(bthapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, -1, -1));

        input.setText("Isi Data");
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });
        getContentPane().add(input, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 90, -1));
        input.getAccessibleContext().setAccessibleName("Isi");

        getContentPane().add(kode, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 120, -1));
        getContentPane().add(nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 120, -1));
        getContentPane().add(stok, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 120, -1));

        labelstok.setText("Stok Barang");
        getContentPane().add(labelstok, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        labelnama.setText("Nama Barang");
        getContentPane().add(labelnama, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        labelkode.setText("Kode Barang");
        getContentPane().add(labelkode, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        judul.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        judul.setText("Inventaris Nutrition Club");
        getContentPane().add(judul, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        btedit.setText("Edit Data");
        btedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteditActionPerformed(evt);
            }
        });
        getContentPane().add(btedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 90, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
        DefaultTableModel model = (DefaultTableModel) tabelinventaris.getModel();
        if (kode.getText().isEmpty() || nama.getText().isEmpty() || stok.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masih ada input yang belum terisi!", "Perhatian", JOptionPane.WARNING_MESSAGE);
        } else {
            String strkode="",strnama="",strstok="";
            try {
                Connection con = new koneksi().GetConnection();
                strkode = kode.getText();
                strnama = nama.getText();
                strstok = stok.getText();
                String sql = "INSERT INTO inventaris VALUES ('"+strkode+"', '"+strnama+"', '"+strstok+"')";
                Statement st = con.createStatement();
                st.executeUpdate(sql);
                Object[] row = {strkode, strnama, strstok};
                model.addRow(row);
                kode.setText("");
                nama.setText("");
                stok.setText("");
                JOptionPane.showMessageDialog(null, "Data sudah dimasukkan~", "Info", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data tidak diinput! \n" + e, "Perhatian", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_inputActionPerformed

    private void bthapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthapusActionPerformed
//        paneldelete.setVisible(true);
//        System.out.println(row);
//        System.out.println(rowitem);
        try {
            DefaultTableModel model = (DefaultTableModel) tabelinventaris.getModel();
            int row = tabelinventaris.getSelectedRow();
            String rowitem = model.getValueAt(row, 0).toString();
            Connection con = new koneksi().GetConnection();
            String sql = "DELETE FROM inventaris WHERE kode = '"+rowitem+"'";
            Statement st = con.createStatement();
            model.removeRow(row);
            st.executeUpdate(sql);
            kode.setText("");
            nama.setText("");
            stok.setText("");
            JOptionPane.showMessageDialog(null, "Data sudah dihapus~", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi sebuah kesalahan! \n " + e, "Error", JOptionPane.WARNING_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data untuk dihapus!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bthapusActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        showdata();
    }//GEN-LAST:event_formWindowOpened

    private void bteditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteditActionPerformed
        String strkode, strnama, strstok;
        try {
            DefaultTableModel model = (DefaultTableModel) tabelinventaris.getModel();
            int row = tabelinventaris.getSelectedRow();
            String oldkode = model.getValueAt(row, 0).toString();
            strkode = kode.getText();
            strnama = nama.getText();
            strstok = stok.getText();
            Connection con = new koneksi().GetConnection();
            String sql = "UPDATE `inventaris` SET `kode` = '"+strkode+"', `nama` = '"+strnama+"', `stok` = '"+strstok+"' WHERE `inventaris`.`kode` = '"+oldkode+"'";
            Statement st = con.createStatement();
            model.setValueAt(strkode, row, 0);
            model.setValueAt(strnama, row, 1);
            model.setValueAt(strstok, row, 2);
            st.executeUpdate(sql);
            kode.setText("");
            nama.setText("");
            stok.setText("");
            JOptionPane.showMessageDialog(null, "Data sudah diedit~", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi sebuah kesalahan! \n " + e, "Error", JOptionPane.WARNING_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data untuk dihapus!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bteditActionPerformed

    private void tabelinventarisMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelinventarisMouseReleased
        DefaultTableModel model = (DefaultTableModel) tabelinventaris.getModel();
        int row = tabelinventaris.getSelectedRow();
        String txtkode = model.getValueAt(row, 0).toString();
        String txtnama = model.getValueAt(row, 1).toString();
        String txtstok = model.getValueAt(row, 2).toString();
        kode.setText(txtkode);
        nama.setText(txtnama);
        stok.setText(txtstok);
    }//GEN-LAST:event_tabelinventarisMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventaris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventaris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventaris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventaris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventaris().setVisible(true);
            }
        });
    }
    
    public void showdata() {
        Connection con = new koneksi().GetConnection();
        ResultSet rs = null;
        PreparedStatement ps = null;
        DefaultTableModel model = (DefaultTableModel) tabelinventaris.getModel();
        try {
            String sql = "SELECT * FROM inventaris";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                String strkode = rs.getString("kode");
                String strnama = rs.getString("nama");
                int strint = rs.getInt("stok");
                Object[] row = {strkode, strnama, strint};
                model.addRow(row);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan! \n" + e, "Perhatian", JOptionPane.WARNING_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btedit;
    private javax.swing.JButton bthapus;
    private javax.swing.JButton input;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JPopupMenu jPopupMenu5;
    private javax.swing.JPopupMenu jPopupMenu6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel judul;
    private javax.swing.JTextField kode;
    private javax.swing.JLabel labelkode;
    private javax.swing.JLabel labelnama;
    private javax.swing.JLabel labelstok;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField stok;
    private javax.swing.JTable tabelinventaris;
    // End of variables declaration//GEN-END:variables
}
